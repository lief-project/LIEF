
name: LIEF Windows x64

on:
  push:
    branches:
      - 'master'
      - 'release-**'
    tags:
      - '**'

jobs:
  build:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11.0-beta.3']
      fail-fast: false
    env:
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: "C:\\Users\\runner\\AppData\\Local\\Mozilla\\sccache"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install system dependencies
      run: |
        choco install ninja
        choco install sccache
        python -m pip install --upgrade pip setuptools
        python -m pip install wheel mako
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        toolset: "14.16"
    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d-%H;%M;%S")"
      shell: bash
    - name: Save sccache
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: "C:\\Users\\runner\\AppData\\Local\\Mozilla\\sccache"
        key: ${{ runner.os }}-x64-sccache-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-x64-sccache-
    - name: Start sccache server
      run: sccache --start-server
    - name: Set env variables
      run: |
        chcp 65001 #set code page to utf-8
        echo ("LIEF_SAMPLES_DIR=" + $env:RUNNER_TEMP + "/samples") >> $env:GITHUB_ENV
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
      shell: cmd
    - name: ‚õì Build Python ${{ matrix.python-version }} & Test
      if: matrix.python-version == 3.6
      run: |
        python -m pip install pytest requests
        python tests/dl_samples.py %LIEF_SAMPLES_DIR%
        python ./setup.py --ninja --lief-test bdist_wheel
      shell: cmd
    - name: ‚ù± Build Python ${{ matrix.python-version }}
      if: matrix.python-version != 3.6
      run: |
        python ./setup.py --ninja bdist_wheel
      shell: cmd
    - name: ‚ù± Build SDK
      if: matrix.python-version == 3.9
      run: |
        python ./scripts/windows/package_sdk.py
    - name: 'Upload SDK Artifact'
      if: matrix.python-version == 3.9
      uses: actions/upload-artifact@v3
      with:
        name: windows-x64-sdk
        path: build/*.zip
        retention-days: 3
    - name: 'Upload Python Wheel Artifact - ${{ matrix.python-version }}'
      uses: actions/upload-artifact@v3
      with:
        name: windows-x64-wheel-${{ matrix.python-version }}
        path: dist/*.whl
        retention-days: 3
    - name: üìä Print sccache stats
      run: sccache --show-stats
    - name: üõë Stop sccache server
      run: sccache --stop-server || true
    - name: Setup WSL
      uses: Vampire/setup-wsl@v1
      with:
        distribution: Debian
        use-cache: 'true'
        wsl-shell-user: root
        set-as-default: 'true'
        wsl-conf: |
          [automount]
          options = "metadata"
        additional-packages:
          ca-certificates
          curl
          locales
          python3 python3-pip
          git
          openssl
          ssh
    - shell: wsl-bash {0}
      name: Deploy
      env:
        LIEF_S3_KEY: ${{ secrets.LIEF_S3_KEY }}
        LIEF_S3_SECRET: ${{ secrets.LIEF_S3_SECRET }}
        GITHUB_ACTIONS: "true"
        GITHUB_WORKSPACE: ${{ env.GITHUB_WORKSPACE }}
        GITHUB_REF: ${{ env.GITHUB_REF }}
        GITHUB_REPOSITORY: ${{ env.GITHUB_REPOSITORY }}
        WSLENV: LIEF_S3_KEY:LIEF_S3_SECRET:GITHUB_ACTIONS:GITHUB_WORKSPACE:GITHUB_REF:GITHUB_REPOSITORY
      run: |
        python3 -m pip install --no-cache-dir --upgrade pip setuptools requests mako wheel boto3
        python3 .github/deploy.py
